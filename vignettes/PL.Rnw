% \VignetteIndexEntry{Computing profit-and-loss and analysing trades}
\documentclass[a4paper,11pt]{article}
\usepackage[left = 3cm, top = 2cm, bottom = 3cm, right = 4.5cm]{geometry}
\usepackage[noae,nogin]{Sweave}
\usepackage{mathptmx}
\usepackage{amsmath,amstext}
\usepackage{hyperref}
\usepackage{natbib}

\SweaveOpts{keep.source = TRUE, eps = TRUE}

\newcommand{\PMwR}{\texttt{PMwR}}
\title{Computing profit-and-loss and analysing trades}
\author{Enrico Schumann}

\begin{document}

{\raggedright{\LARGE Computing profit-and-loss and analysing trades}}\medskip

\noindent Enrico Schumann\\
\noindent \texttt{es@enricoschumann.net}\\
\bigskip


<<echo=false>>=
require("PMwR")
@

\section{Profit and (or) loss}

\subsection{The simple case}

Suppose we have an account denominated in euro.  We buy one asset at a
price of 100 euro and sell it again at 102 euro.  We have made a
profit of 2 euros.

This simple cape happens often enough to make the required computation
simple as well.  Computing profit-or-loss can be handled through the
function \texttt{pl}.

<<>>=
pl(price  = c(100, 102), 
   amount = c(  1,  -1))
@

Suppose a trader bought 1 unit @ 50, 1 unit @ 90 and sold 2 units @
100.  It is easy enough to compute the profit for these trades.

<<>>=
pl(price  = c( 50, 90, 100), 
   amount = c(  1,  1,  -2))
@

\noindent But suppose that the actual order of the trades was

buy @ 90 \quad $\Rightarrow$ \quad buy @ 50 \quad $\Rightarrow$ \quad
sell @ 100\,.

\noindent Even if we know nothing about what was traded and when, some
information is provided by the order of the trades: the first position
of 1 unit had a realised drawdown of at least 40 before it recovered.
For situations like this, the argument \texttt{along.timestamp} can be
used. (Note that we do not provide an actual timestamp, in which case
the function will implictly use integers 1, 2, \ldots,
\texttt{length(amount)}\,.)

<<>>=
pl(price  = c( 90, 50, 100), 
   amount = c(  1,  1,  -2), along.timestamp = TRUE)
@ 

\noindent With no further arguments, the function will compute the
running position and evaluate it at every trade with the trade's
price.  This may not be accurate because of bid--ask spreads or other
transaction costs, but it provides more information than only
computing the profit/loss for the trades. 


<<>>=
J <- Journal(price     = c( 90, 50, 100), 
             amount    = c(  1,  1,  -2),
             timestamp = c(  2,  4,   7))
pl(J, along.timestamp = TRUE)
position(J, when = 1:10)
@ 


Suppose we also have a time series of the prices between time 1 and
10.  That is useful to figure what has happened.  So now we have to
evaluate the position at every time instant.


<<>>=
P <- c(100,90,40,50,60,84,100,120,100,90)
T <- seq_along(P)
PLsorted(J$amount, J$price, timestamp = J$timestamp,
         allprices = P, alltimes = T,
         initcash = 500)

p <- position(J, when = 1:11)
pl(J, initcash = 500, along.timestamp = TRUE)

##mvalue.position(J, when, series)

@

A more-useful example for pl with \texttt{along.timestamp} is a
trading history of a high-frequency strategy.  Suppose for example we
had traded EURUSD 200 times in single day and wished to plot the
result.  At such a frequency, the prices at which the trades were
executed can be useful to value any open position. 


<<>>=
@ 



\subsection{More complicated cases}

Unfortunately, in real life computing PL is often more complicated:

\begin{itemize}
\item One asset-price unit may not translate into one currency unit:
  we multipliers or contract factors.

\item Asset positions may map into non-trivial cashflows.  The simple
  case would be the delay in actual payment and delivery of an asset;
  but the more problematic cases are derivatives with daily
  adjustments of margins.

\item Assets may be denominated in various currencies.
  
\item Currencies may be assets in the portfolio.  Depending on how
  they are traded (cash, forwards, \texttt{\&c.}), computing PL may
  not be simple.
\end{itemize}

\section{Exposure}

We have the following trades and times.

<<>>=
amount <- c(1,3,-3,1,-3,1)
time <- c(0,1,3,4,7,12)
@ 

The holding period (\texttt{duration}) of these trades can be computed
so:
<<>>=
data.frame(position = cumsum(amount)[-length(amount)], 
           from = time[-length(time)],
           to   = time[-1L],
           duration = diff(time))
@ 

We can plot the exposure.
<<fig=true, height=2, width=5>>=
par(bty = "n", mar = c(4,4,0,0), tck = 0.005, las = 1, cex = 0.8)
plot(c(time[1L], time), cumsum(c(0, amount)), type = "s",
     xlab = "time", ylab = "position")
@ 

\noindent Thus, we have had a position from time zero to 12 (hours, say), but
its size varied.  The function \texttt{twExposure} (time-weighted
exposure) computes the average absolute exposure.

<<>>=
twExposure(amount, time)
@ 

\noindent To give a simple example: suppose we bought at the open of a
trading day and sold at noon.  The average exposure for the day is
thus half a contract.

<<>>=
amount <- c(1, -1 , 0)
time   <- c(0,0.5,1)
twExposure(amount, time)
@ 


\section{Splitting and rescaling}

Suppose we have the following trades and impose a limit that the
maximum absolute exposure for the trader should only be 2.

<<>>=
t <- 1:6
n <- c(-1,-1,-1,1,1,1)
p <- c(100,99,98,98,99,100)
limit(n, p, t, lim = 2)
@ 

Scaling the trades.
<<>>=
scaleToUnity(n)
@ 

Closing the trade at once.
<<>>=
closeOnFirst(n)
@

\section{Journals}


\PMwR\ provides an S3 class \texttt{Journal} for handling transaction
data.  A \texttt{Journal} is created through the function
\texttt{Journal}, but it is really just a list of atomic vectors with
a class attribute.  Methods should not rely on these vectors being
sorted; that is, components of a journal should always be retrieved by
name, never by position.

The simplicity of the class is intended, as it is mostly used in
interactive analyses.  Thus, the analyst is supposed to dissect the
information at will.

What is actually stored in a \texttt{Journal} is up to its user, but a few
fields are typical (and required for several methods):

\begin{description}

\item[timestamp] anything that can be sorted (and that fits into an
  atomic vector: POSIXlt is possible, but not recommended)

\item[amount] notional amount that is transfered

\item[price] price

\item[id] (ideally unique) id

\item[instrument] description of the financial instrument

\item[account] description of the account

\item[\texttt{...}]  other fields (must named, eg, \texttt{fees =
    c(1,2,1)}
\end{description}

The idea is that all transactions are put into a hierachy

\begin{verbatim}
   <account>::<instrument>
\end{verbatim}


To a give really simple example, suppose you kept track of a bank account.

<<>>=
when   <- as.Date("2012-01-01") + 0:3
amount <- c(1,2,-2,5) 
J <- Journal(timestamp = when, amount = amount)
@ 

The \texttt{position} function gives the current balance of an
account.

<<>>=
position(J)
@ 

Suppose we buy five times one unit of some unspecified asset.

<<>>=
tl1 <- Journal(timestamp = 1:5, 
               amount = 1, 
               price = c(2,2,2,3,4), 
               account = "my account")
tl1
@ 

Now we close the trade.

<<>>=
tl2 <- Journal(timestamp = 6, 
               amount    = -5, 
               price     = 3, 
               account   = "my account")
@ 

To compute the profit or loss, we first concatenate the two lists.

<<>>=
tl <- c(tl1, tl2)
@ 


<<>>=
pl(tl)
@ 

Let us look at a more complicated example.

<<>>= 

trades <- read.table(textConnection("ticker; timestamp; amount; price; fees
BEId ; 2012-12-05 03:17:37;49;  60.4500; -4.00
BEId ; 2013-03-13 08:56:11;58;  69.5500; -4.03
DTEd ; 2012-12-05 03:22:02;313; 8.6000;  -4.00
DTEd ; 2013-02-04 11:26:39;187; 8.8540;  -4.00
DTEd ; 2013-03-13 08:54:39;397; 8.3750;  -4.00
DTEd ; 2013-05-16 06:23:17;-897;9.9200;  -8.90
FMEd  ;2013-03-13 08:50:49;145; 51.5600; -7.48
FREd  ;2012-12-05 03:29:54;34;  88.0000; -4.00
FREd  ;2013-03-13 08:50:49;44;  95.2200; -4.19
HEN3d ;2012-12-05 03:34:30;16;  63.1200; -4.00
HEN3d ;2013-03-13 08:58:27;97;  72.6800; -7.05
LINd  ;2013-01-31 04:08:13;22;  134.5000;-4.00
LINd  ;2013-05-16 06:49:10;50;  151.7000;-7.58
LINd  ;2013-02-15 05:54:30;-22; 131.4000;-4.00
MEOd  ;2013-02-15 07:38:39;120; 24.1800; -4.00
MEOd  ;2013-03-13 05:05:30;-120;21.1300; -4.00
MEOd  ;2013-05-23 03:09:09;270;26.4700; -7.15
MRKd  ;2012-12-05 03:53:23;20;  102.6000;-4.00
MRKd  ;2013-03-13 08:55:29;45;  113.8500;-5.12
SAPd  ;2012-12-05 03:31:58;32;  61.3100; -4.00
SAPd  ;2013-03-13 05:05:37;-32; 63.5800; -4.00
SDFd  ;2013-02-15 06:02:00;90;  33.6500; -4.00
SDFd  ;2013-03-13 08:50:47;49;  35.9400; -4.00
SIEd  ;2012-12-05 03:46:14;37;  79.8900; -4.00
SIEd  ;2013-01-09 03:25:10;-37; 83.5200; -4.00"),
                     sep =";", header = TRUE,
                     strip.white = TRUE, 
                     stringsAsFactors = FALSE)

trades$timestamp <- c(as.POSIXct(trades$timestamp, tz = "America/New_York"))

@ 

We put this all into a Journal \texttt{J}.
<<>>=
J <- Journal(timestamp = trades$timestamp, 
             amount = trades$amount,
             price = trades$price,
             instrument = trades$ticker,
             fees = trades$fees)
J
@ 

What is the current position?
<<>>=
position(J)
@ 

What was the positon in 15 January 2013, 11:00:00? 
<<>>=
position(J, when = as.POSIXct("2013-01-15 11:00:00"))
@ 

This suggests a mechanism to value a portfolio: decide \texttt{when}
to value the portfolio, then get prices for when, take the inner
product of the position at when with these prices.


\subsection{Two accounts}

<<>>=

trades <- read.table(textConnection(
"account; ticker; timestamp; amount; price
private ; A ; 1;   100; 60
private ; A ; 2;   100; 70
private ; A ; 3;  -200; 66
longterm; A ; 1; 100; 60
longterm; B ; 1; 100; 5"),
                     sep =";", header = TRUE,
                     strip.white = TRUE, 
                     stringsAsFactors = FALSE)
@ 

<<>>=
J <- Journal(trades$timestamp, trades$amount,
             trades$price, NA, trades$ticker, trades$account)
J
@


But now we also have accounts.
<<>>=
J$account
@ 

<<>>=
position(J)
@ 

<<>>=
position(J, aggr.accounts=FALSE)
@ 

<<eval=false>>=
## Journal.cli(J, ...)
##while (input != "exit") {
##  input <- readline()
##  ## parse me
##}
@ 

\section{Examples}



\appendix

\section{Function overview}

\subsection{\texttt{pl}}

The default use-case of this function is a Journal of closed trades
(ie, the current position is zero).




\end{document}
